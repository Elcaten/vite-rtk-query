/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StandingsImport } from './routes/standings'
import { Route as IndexImport } from './routes/index'
import { Route as LeaguesIndexImport } from './routes/leagues.index'
import { Route as LeaguesLeagueIdImport } from './routes/leagues.$leagueId'

// Create/Update Routes

const StandingsRoute = StandingsImport.update({
  id: '/standings',
  path: '/standings',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LeaguesIndexRoute = LeaguesIndexImport.update({
  id: '/leagues/',
  path: '/leagues/',
  getParentRoute: () => rootRoute,
} as any)

const LeaguesLeagueIdRoute = LeaguesLeagueIdImport.update({
  id: '/leagues/$leagueId',
  path: '/leagues/$leagueId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/standings': {
      id: '/standings'
      path: '/standings'
      fullPath: '/standings'
      preLoaderRoute: typeof StandingsImport
      parentRoute: typeof rootRoute
    }
    '/leagues/$leagueId': {
      id: '/leagues/$leagueId'
      path: '/leagues/$leagueId'
      fullPath: '/leagues/$leagueId'
      preLoaderRoute: typeof LeaguesLeagueIdImport
      parentRoute: typeof rootRoute
    }
    '/leagues/': {
      id: '/leagues/'
      path: '/leagues'
      fullPath: '/leagues'
      preLoaderRoute: typeof LeaguesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/standings': typeof StandingsRoute
  '/leagues/$leagueId': typeof LeaguesLeagueIdRoute
  '/leagues': typeof LeaguesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/standings': typeof StandingsRoute
  '/leagues/$leagueId': typeof LeaguesLeagueIdRoute
  '/leagues': typeof LeaguesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/standings': typeof StandingsRoute
  '/leagues/$leagueId': typeof LeaguesLeagueIdRoute
  '/leagues/': typeof LeaguesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/standings' | '/leagues/$leagueId' | '/leagues'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/standings' | '/leagues/$leagueId' | '/leagues'
  id: '__root__' | '/' | '/standings' | '/leagues/$leagueId' | '/leagues/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  StandingsRoute: typeof StandingsRoute
  LeaguesLeagueIdRoute: typeof LeaguesLeagueIdRoute
  LeaguesIndexRoute: typeof LeaguesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  StandingsRoute: StandingsRoute,
  LeaguesLeagueIdRoute: LeaguesLeagueIdRoute,
  LeaguesIndexRoute: LeaguesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/standings",
        "/leagues/$leagueId",
        "/leagues/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/standings": {
      "filePath": "standings.tsx"
    },
    "/leagues/$leagueId": {
      "filePath": "leagues.$leagueId.tsx"
    },
    "/leagues/": {
      "filePath": "leagues.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
