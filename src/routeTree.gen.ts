/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SplatImport } from './routes/$'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as GuestIndexImport } from './routes/guest/index'
import { Route as AuthStandingsImport } from './routes/_auth/standings'
import { Route as AuthProfileImport } from './routes/_auth/profile'
import { Route as AuthDashboardImport } from './routes/_auth/dashboard'
import { Route as AuthTeamsIndexImport } from './routes/_auth/teams.index'
import { Route as AuthLeaguesIndexImport } from './routes/_auth/leagues.index'
import { Route as AuthBudgetsIndexImport } from './routes/_auth/budgets.index'
import { Route as AuthTeamsTeamIdImport } from './routes/_auth/teams.$teamId'
import { Route as AuthLeaguesLeagueIdImport } from './routes/_auth/leagues.$leagueId'
import { Route as AuthBudgetsBudgetIdImport } from './routes/_auth/budgets.$budgetId'
import { Route as AuthAccountsAccountIdTransactionsImport } from './routes/_auth/accounts.$accountId.transactions'

// Create/Update Routes

const SplatRoute = SplatImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const GuestIndexRoute = GuestIndexImport.update({
  id: '/guest/',
  path: '/guest/',
  getParentRoute: () => rootRoute,
} as any)

const AuthStandingsRoute = AuthStandingsImport.update({
  id: '/standings',
  path: '/standings',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthDashboardRoute = AuthDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthTeamsIndexRoute = AuthTeamsIndexImport.update({
  id: '/teams/',
  path: '/teams/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLeaguesIndexRoute = AuthLeaguesIndexImport.update({
  id: '/leagues/',
  path: '/leagues/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthBudgetsIndexRoute = AuthBudgetsIndexImport.update({
  id: '/budgets/',
  path: '/budgets/',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthTeamsTeamIdRoute = AuthTeamsTeamIdImport.update({
  id: '/teams/$teamId',
  path: '/teams/$teamId',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLeaguesLeagueIdRoute = AuthLeaguesLeagueIdImport.update({
  id: '/leagues/$leagueId',
  path: '/leagues/$leagueId',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthBudgetsBudgetIdRoute = AuthBudgetsBudgetIdImport.update({
  id: '/budgets/$budgetId',
  path: '/budgets/$budgetId',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthAccountsAccountIdTransactionsRoute =
  AuthAccountsAccountIdTransactionsImport.update({
    id: '/accounts/$accountId/transactions',
    path: '/accounts/$accountId/transactions',
    getParentRoute: () => AuthRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/$': {
      id: '/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof SplatImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/standings': {
      id: '/_auth/standings'
      path: '/standings'
      fullPath: '/standings'
      preLoaderRoute: typeof AuthStandingsImport
      parentRoute: typeof AuthRouteImport
    }
    '/guest/': {
      id: '/guest/'
      path: '/guest'
      fullPath: '/guest'
      preLoaderRoute: typeof GuestIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/budgets/$budgetId': {
      id: '/_auth/budgets/$budgetId'
      path: '/budgets/$budgetId'
      fullPath: '/budgets/$budgetId'
      preLoaderRoute: typeof AuthBudgetsBudgetIdImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/leagues/$leagueId': {
      id: '/_auth/leagues/$leagueId'
      path: '/leagues/$leagueId'
      fullPath: '/leagues/$leagueId'
      preLoaderRoute: typeof AuthLeaguesLeagueIdImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/teams/$teamId': {
      id: '/_auth/teams/$teamId'
      path: '/teams/$teamId'
      fullPath: '/teams/$teamId'
      preLoaderRoute: typeof AuthTeamsTeamIdImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/budgets/': {
      id: '/_auth/budgets/'
      path: '/budgets'
      fullPath: '/budgets'
      preLoaderRoute: typeof AuthBudgetsIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/leagues/': {
      id: '/_auth/leagues/'
      path: '/leagues'
      fullPath: '/leagues'
      preLoaderRoute: typeof AuthLeaguesIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/teams/': {
      id: '/_auth/teams/'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof AuthTeamsIndexImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/accounts/$accountId/transactions': {
      id: '/_auth/accounts/$accountId/transactions'
      path: '/accounts/$accountId/transactions'
      fullPath: '/accounts/$accountId/transactions'
      preLoaderRoute: typeof AuthAccountsAccountIdTransactionsImport
      parentRoute: typeof AuthRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRoute
  AuthProfileRoute: typeof AuthProfileRoute
  AuthStandingsRoute: typeof AuthStandingsRoute
  AuthBudgetsBudgetIdRoute: typeof AuthBudgetsBudgetIdRoute
  AuthLeaguesLeagueIdRoute: typeof AuthLeaguesLeagueIdRoute
  AuthTeamsTeamIdRoute: typeof AuthTeamsTeamIdRoute
  AuthBudgetsIndexRoute: typeof AuthBudgetsIndexRoute
  AuthLeaguesIndexRoute: typeof AuthLeaguesIndexRoute
  AuthTeamsIndexRoute: typeof AuthTeamsIndexRoute
  AuthAccountsAccountIdTransactionsRoute: typeof AuthAccountsAccountIdTransactionsRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthDashboardRoute: AuthDashboardRoute,
  AuthProfileRoute: AuthProfileRoute,
  AuthStandingsRoute: AuthStandingsRoute,
  AuthBudgetsBudgetIdRoute: AuthBudgetsBudgetIdRoute,
  AuthLeaguesLeagueIdRoute: AuthLeaguesLeagueIdRoute,
  AuthTeamsTeamIdRoute: AuthTeamsTeamIdRoute,
  AuthBudgetsIndexRoute: AuthBudgetsIndexRoute,
  AuthLeaguesIndexRoute: AuthLeaguesIndexRoute,
  AuthTeamsIndexRoute: AuthTeamsIndexRoute,
  AuthAccountsAccountIdTransactionsRoute:
    AuthAccountsAccountIdTransactionsRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteRouteWithChildren
  '/$': typeof SplatRoute
  '/dashboard': typeof AuthDashboardRoute
  '/profile': typeof AuthProfileRoute
  '/standings': typeof AuthStandingsRoute
  '/guest': typeof GuestIndexRoute
  '/budgets/$budgetId': typeof AuthBudgetsBudgetIdRoute
  '/leagues/$leagueId': typeof AuthLeaguesLeagueIdRoute
  '/teams/$teamId': typeof AuthTeamsTeamIdRoute
  '/budgets': typeof AuthBudgetsIndexRoute
  '/leagues': typeof AuthLeaguesIndexRoute
  '/teams': typeof AuthTeamsIndexRoute
  '/accounts/$accountId/transactions': typeof AuthAccountsAccountIdTransactionsRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteRouteWithChildren
  '/$': typeof SplatRoute
  '/dashboard': typeof AuthDashboardRoute
  '/profile': typeof AuthProfileRoute
  '/standings': typeof AuthStandingsRoute
  '/guest': typeof GuestIndexRoute
  '/budgets/$budgetId': typeof AuthBudgetsBudgetIdRoute
  '/leagues/$leagueId': typeof AuthLeaguesLeagueIdRoute
  '/teams/$teamId': typeof AuthTeamsTeamIdRoute
  '/budgets': typeof AuthBudgetsIndexRoute
  '/leagues': typeof AuthLeaguesIndexRoute
  '/teams': typeof AuthTeamsIndexRoute
  '/accounts/$accountId/transactions': typeof AuthAccountsAccountIdTransactionsRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/$': typeof SplatRoute
  '/_auth/dashboard': typeof AuthDashboardRoute
  '/_auth/profile': typeof AuthProfileRoute
  '/_auth/standings': typeof AuthStandingsRoute
  '/guest/': typeof GuestIndexRoute
  '/_auth/budgets/$budgetId': typeof AuthBudgetsBudgetIdRoute
  '/_auth/leagues/$leagueId': typeof AuthLeaguesLeagueIdRoute
  '/_auth/teams/$teamId': typeof AuthTeamsTeamIdRoute
  '/_auth/budgets/': typeof AuthBudgetsIndexRoute
  '/_auth/leagues/': typeof AuthLeaguesIndexRoute
  '/_auth/teams/': typeof AuthTeamsIndexRoute
  '/_auth/accounts/$accountId/transactions': typeof AuthAccountsAccountIdTransactionsRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/$'
    | '/dashboard'
    | '/profile'
    | '/standings'
    | '/guest'
    | '/budgets/$budgetId'
    | '/leagues/$leagueId'
    | '/teams/$teamId'
    | '/budgets'
    | '/leagues'
    | '/teams'
    | '/accounts/$accountId/transactions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/$'
    | '/dashboard'
    | '/profile'
    | '/standings'
    | '/guest'
    | '/budgets/$budgetId'
    | '/leagues/$leagueId'
    | '/teams/$teamId'
    | '/budgets'
    | '/leagues'
    | '/teams'
    | '/accounts/$accountId/transactions'
  id:
    | '__root__'
    | '/_auth'
    | '/$'
    | '/_auth/dashboard'
    | '/_auth/profile'
    | '/_auth/standings'
    | '/guest/'
    | '/_auth/budgets/$budgetId'
    | '/_auth/leagues/$leagueId'
    | '/_auth/teams/$teamId'
    | '/_auth/budgets/'
    | '/_auth/leagues/'
    | '/_auth/teams/'
    | '/_auth/accounts/$accountId/transactions'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  SplatRoute: typeof SplatRoute
  GuestIndexRoute: typeof GuestIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  SplatRoute: SplatRoute,
  GuestIndexRoute: GuestIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/$",
        "/guest/"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/dashboard",
        "/_auth/profile",
        "/_auth/standings",
        "/_auth/budgets/$budgetId",
        "/_auth/leagues/$leagueId",
        "/_auth/teams/$teamId",
        "/_auth/budgets/",
        "/_auth/leagues/",
        "/_auth/teams/",
        "/_auth/accounts/$accountId/transactions"
      ]
    },
    "/$": {
      "filePath": "$.tsx"
    },
    "/_auth/dashboard": {
      "filePath": "_auth/dashboard.tsx",
      "parent": "/_auth"
    },
    "/_auth/profile": {
      "filePath": "_auth/profile.tsx",
      "parent": "/_auth"
    },
    "/_auth/standings": {
      "filePath": "_auth/standings.tsx",
      "parent": "/_auth"
    },
    "/guest/": {
      "filePath": "guest/index.tsx"
    },
    "/_auth/budgets/$budgetId": {
      "filePath": "_auth/budgets.$budgetId.tsx",
      "parent": "/_auth"
    },
    "/_auth/leagues/$leagueId": {
      "filePath": "_auth/leagues.$leagueId.tsx",
      "parent": "/_auth"
    },
    "/_auth/teams/$teamId": {
      "filePath": "_auth/teams.$teamId.tsx",
      "parent": "/_auth"
    },
    "/_auth/budgets/": {
      "filePath": "_auth/budgets.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/leagues/": {
      "filePath": "_auth/leagues.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/teams/": {
      "filePath": "_auth/teams.index.tsx",
      "parent": "/_auth"
    },
    "/_auth/accounts/$accountId/transactions": {
      "filePath": "_auth/accounts.$accountId.transactions.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
